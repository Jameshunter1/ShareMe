import React, { useState, useEffect } from 'react';
import { MdDownloadForOffline } from 'react-icons/md'; // import an icon from the react-icons library
import { Link, useParams } from "react-router-dom"; // import routing-related modules from the react-router-dom library
import { v4 as uuidv4 } from "uuid"; // import a function for generating UUIDs
import { client, urlFor } from "../client"; // import functions for interacting with a CMS backend
import MasonryLayout from './MasonryLayout'; // import a custom Masonry layout component
import { pinDetailMorePinQuery, pinDetailQuery } from "../utils/data"; // import some utility functions for querying pin data
import Spinner from"./Spinner" // import a custom loading spinner component

const PinDetail = ({ user }) => {
  // Declare state variables using the useState hook
  const [pins, setPins] = useState(null); // an array of related pins to display
  const [pinDetail, setPinDetail] = useState(null); // details about the current pin being viewed
  const [comment, setComment] = useState(""); // text of the comment currently being written
  const [addingComment, setAddingComment] = useState(null); // whether a new comment is currently being added
  const { pinId } = useParams(); // Extract the "pinId" parameter from the URL using the useParams hook

  // Define a function to fetch the details of the current pin
  const fetchPinDetails = () => {
    // Generate a query to retrieve the details of the current pin
    let query = pinDetailQuery(pinId);
    
    // If the query exists (i.e., the pinId parameter is valid), send it to the CMS backend using the client.fetch function
    if (query) {
      client.fetch(query)
        .then((data) => {
          // Set the state variable "pinDetail" to the retrieved pin details
          setPinDetail(data[0]);

          // If the pin details were successfully retrieved, generate a query to retrieve any related pins
          if (data[0]) {
            query = pinDetailMorePinQuery(data[0]);

            // Send the query to the CMS backend and set the state variable "pins" to the retrieved related pins
            client.fetch(query)
              .then((res) => { setPins(res) })
          }
        });
    }
  };

  // Use the useEffect hook to fetch the pin details whenever the "pinId" parameter changes
  useEffect(() => {
    fetchPinDetails();
  }, [pinId]);

  // If the "pinDetail" state variable is null, display a loading spinner
  if (!pinDetail) {
    return (
      <Spinner message="Loading Pin" />)
  }

  // If the "pinDetail" state variable exists, display the pin details
    // render the component's UI using JSX
  return (
    <div className='flex xl:flex-row flex-col m-auto bg-white' style={{ maxWidth: "1500px", borderRadius: "32px" }}>
      <div className='flex justify-center items-center md:items-start flex-initial'>
        {/* display the pinDetail's image using a URL generated by the urlFor function */}
        <img src={[pinDetail?.image && urlFor(pinDetail.image).url()]}
          className="rounded-t 3xl rounded-b-lg"
        alt="post"/>
      </div>
      <div className='w-full p-5 flex-1 xl:min-w-620'>
        <div className='flex items-center justify-between'>
          <div className='flex gap-2 items-center'>
            {/* display a download button for the pinDetail's image */}
            <a
              href={`${pinDetail.image.asset?.url}?dl=`}
              download
              className="bg-white w-9 h-9 rounded-full flex items-center justify-center text-dark text-xl opacity-75 hover:opacity-100 hover:shadow-md outline-none">
              <MdDownloadForOffline /></a>
          </div>
          {/* display a link to the pinDetail's destination */}
          <a href={pinDetail.destination} target="_blank" rel="noreferrer">
            {pinDetail.destination}
          </a>
        </div>
        <div>
          {/* display the pinDetail's title and description */}
          <h1 className='text-4xl font-bold break-words mt-3'>
            {pinDetail.title}
          </h1>
          <p className='mt-3'>
            {pinDetail.about}
          </p>
        </div>
        {/* display a link to the profile of the user who posted the pinDetail */}
        <Link to={`/user-profile/${pinDetail?.postedBy?._id}`} className="hidden md:block">
          <img src={pinDetail?.postedBy?.image} alt="user" className="flex gap-2 mt-5 items-center bg-white rounded-lg " />
          <p className='font-semibold capitalize'>
            {pinDetail?.postedBy.userName}
          </p>
        </Link>
        {/* display a header for the comments section */}
        <h2 className='mt-5 text-2xl'>Comments</h2>
        <div className='max-h-370 overflow-y-auto'>
          {/* display each comment in the pinDetail's comments array */}
          {pinDetail?.comments?.map((comment, i) => (
            <div className='flex gap-2 mt-5 items-center bg-white rounded-lg'>
              <img src={comment.postedBy?.image}
                alt="profile"
                className='w-10 h-10 rounded-full cursor-pointer'
                key={i} />
              <div className='flex flex-col'>
                <p className='font-bold'>{comment.postedBy.userName}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  )
}

export default PinDetail // export the PinDetail component as the default export of this module